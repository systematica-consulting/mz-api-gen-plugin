plugins {
  id 'java-gradle-plugin'
  id 'maven-publish'
  id 'com.gradle.plugin-publish' version '0.16.0'
}

group = groupId
version = groupVersion

repositories {
  mavenCentral()
}

gradlePlugin {
  plugins {
    apiPlugin {
      id = 'ru.systematica-consulting.mz-api-gen-plugin'
      implementationClass = 'ru.systematica_consulting.mz.api.ApiPlugin'
      displayName = 'Plugin to generate JSON schema from xsd and xslt'
      description = 'Plugin to generate JSON schema from xsd and xslt'
    }
  }
}

pluginBundle {
  website = 'https://github.com/systematica-consulting/mz-api-gen-plugin'
  vcsUrl = 'https://github.com/systematica-consulting/mz-api-gen-plugin'
  tags = ['systematica-consulting', "jsonshema", "xsd", "xslt"]
}

dependencies {
  compileOnly 'org.projectlombok:lombok:1.18.22'
  annotationProcessor 'org.projectlombok:lombok:1.18.22'

  implementation group: 'org.apache.xmlbeans', name: 'xmlbeans', version: '5.0.1'
  implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.12.3'
  implementation group: 'xalan', name: 'xalan', version: '2.7.2'
  implementation group: 'org.json', name: 'json', version: '20200518'
  implementation group: 'com.ibm.icu', name: 'icu4j', version: '69.1'

  implementation group: 'org.apache.logging.log4j', name: 'log4j-to-slf4j', version: '2.14.1'

  testImplementation group: 'junit', name: 'junit', version: '4.12'
}

task sourcesJar(type: Jar, dependsOn: classes) {
  classifier = 'sources'
  from sourceSets.main.allSource
}

tasks.withType(JavaCompile) {
  options.encoding = "UTF-8"
  options.compilerArgs.add('-parameters')
}

artifacts {
  archives sourcesJar
}

publishing {
  publications {
    mavenJava(MavenPublication) {
      from components.java
    }
  }
  repositories {
    maven {
      name 'nexus'
      def releasesRepoUrl = "https://nexus.devsun.ru/repository/releases/devsun/"
      def snapshotsRepoUrl = "https://nexus.devsun.ru/repository/snapshots/devsun/"
      url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
      credentials {
        username = System.env.NEXUS_USER
        password = System.env.NEXUS_PASS
      }
    }
  }
}
